{
  "name": "AuthSchemeOptions",
  "description": "Options for authSchemes",
  "plural": "AuthSchemeOptions",
  "base": "Model",
  "http": {},
  "strict": false,
  "options": {
    "idInjection": false,
    "validateUpsert": false,
    "transient": {}
  },
  "properties": {
    "id": false,
    "isEmailOptional": {
      "type": "Boolean",
      "default": true,
      "description": "when set to `true`, authScheme will not fail parsing profiles without `email`"
    },
    "credentialDefaults": {
      "type": "Object",
      "required": false,
      "description": "default values used when composing `credentials` with a custom `AuthScheme`"
    },
    "callbackHTTPMethod": {
      "type": "String",
      "default": "GET",
      "description": "HTTP method used to invoke authentication on `authPath`. Must be one of ['GET', 'POST']"
    },
    "callbackBodyParser": {
      "type": "String",
      "required": false,
      "description": [
        "Name of the `express body-parser` used to parse the `body` portion of `http.IncomingMessage`",
        "on `authPath`. The body-parser middleware is resolved from `loopback.bodyParser` and added immediately",
        "befor `authMiddleware` or `passport.authorize()` for `link` providers respectively"
      ]
    },
    "callbackBodyParserOptions": {
      "type": "Object",
      "required": false,
      "default": { "extended": true },
      "description": "options passed to `authBodyParser` on creation"
    }
  },
  "hidden": [],
  "relations": {},
  "acls": [],
  "scopes": {},
  "scope": {},
  "indexes": {}
}
